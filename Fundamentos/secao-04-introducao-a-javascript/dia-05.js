// Parte I
// ğŸš€ Altere o tipo das variÃ¡veis (var) para let ou const para que respeitem o escopo em que foram declaradas.
// ğŸš€ Modifique a variÃ¡vel para que respeite o escopo onde estÃ¡ sendo declarada. Lembre-se: para que a variÃ¡vel respeite o escopo, ela nÃ£o deve ser acessÃ­vel fora do escopo em que esteja sendo declarada.
// Copie o cÃ³digo abaixo e rode-o para verificar sua saÃ­da:
// Altere o valor das propriedades do objeto, para que respeite as caracterÃ­sticas da variÃ¡vel do tipo const;
// Copie o cÃ³digo abaixo e rode-o para verificar sua saÃ­da:

    // Executando esse cÃ³digo iremos receber um erro `TypeError: Assignment to constant variable.`
    // const pessoa = {
    //     nome: 'Henri',
    //     idade: 20
    //   }
    //   pessoa = {
    //     nome: 'Luna',
    //     idade: 19
    //   } // Altere essa estrutura para corrigir o erro.
    //   console.log('Nome:', pessoa.nome);
    //   console.log('Idade:', pessoa.idade);

//       ğŸš€ Modifique a variÃ¡vel para que nÃ£o ocorra Erro;

var pessoa = {
    nome: 'Henri',
    idade: 20
  }
  pessoa = {
    nome: 'Luna',
    idade: 19
  } 
//   console.log('Nome:', pessoa.nome);
//   console.log('Idade:', pessoa.idade);



// ğŸš€ Modifique a estrutura das funÃ§Ãµes a seguir para que elas sejam arrow functions;

// ğŸš€ Transforme a funÃ§Ã£o numeroAleatorio em uma arrow function;
// Copie o cÃ³digo abaixo:

const numeroAleatorio = (_) => Math.random()

//   console.log(numeroAleatorio());


// Transforme a funÃ§Ã£o hello em uma arrow function;
// Copie o cÃ³digo abaixo:

const hello = nome => {
    return `OlÃ¡, ${nome}!`
  }
  let nome = 'Ivan';
//   console.log(hello(nome));



// ğŸš€ Transforme a funÃ§Ã£o nomeCompleto em uma arrow function;
// Copie o cÃ³digo abaixo:

const nomeCompleto = (nome, sobrenome) => `${nome} ${sobrenome}`

//   console.log(nomeCompleto(`Ivan`, `Pires`));


//Altere a expressÃ£o if/else utilizando ternary operator;

//Copie o cÃ³digo abaixo:

    const speedCar = (speed) => {
        const velocidadeNaoPermitida = `VocÃª ultrapassou o limite de velocidade`
        const velocidadePermitida = `VocÃª estÃ¡ na velocidade permitida`
    return (speed>=120) ?  velocidadeNaoPermitida : velocidadePermitida 
    };

console.log (speedCar(80))

//RESOLUÃ‡AO: https://stackoverflow.com/questions/19439219/ternary-operator-with-return-statements-javascript

// const speedCar = (speed) => {
//     const velocidadeNaoPermitida = `VocÃª ultrapassou o limite de velocidade`
//     const velocidadePermitida = `VocÃª estÃ¡ na velocidade permitida`

//     if (speed >= 120){
//         return velocidadeNaoPermitida
//     }
//     else {return velocidadePermitida}

// }

// console.log (speedCar(10))

